{"version":3,"sources":["components/InputRow.tsx","components/ReportTable.tsx","utils/API.tsx","utils/db.tsx","Context/Auth.tsx","Context/State.tsx","components/AddExpensesForm.tsx","components/AddIncomeForm.tsx","components/AppBar.tsx","components/PivotTable.tsx","components/Form.tsx","components/WallChart.tsx","components/Edit.tsx","pages/Home.tsx","components/Signup.tsx","pages/Login.tsx","components/Alert.tsx","components/SnackBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["StyledTableRow","withStyles","theme","createStyles","root","backgroundColor","palette","background","default","blueGrey","paddingLeft","TableRow","InputRow","props","useState","amount","state","setState","handleInputRowChange","event","target","name","value","makeDataList","propsState","id","map","entry","useEffect","fields","filter","column","includes","TableCell","className","classes","TextField","onBlur","e","handleChange","i","onChange","inputProps","list","InputProps","startAdornment","InputAdornment","position","disableUnderline","style","width","dataLists","persons","narrow_categories","broad_categories","IconButton","color","onClick","handleUpdate","aria-label","deleteEntry","ReportTable","makeStyles","table","minWidth","padding","tableCellHead","primary","main","common","white","fontSize","tableCellBody","maxWidth","useStyles","myRef","createRef","current","scrollIntoView","behavior","TableContainer","component","Paper","Table","ref","TableHead","schema","textTransform","replace","TableBody","data","checkStatus","res","parseMethod","status","Error","json","text","blob","db","API","addCategories","token","fetch","method","headers","authorization","body","JSON","stringify","then","getCategories","expenses","yearMonthObj","year","month","postExpenses","postBatchExpenses","postIncome","postBatchIncome","deleteExpenses","updateExpenses","income","updateIncome","deleteIncome","pivot","wallchart","dataList","signup","login","checkAuth","downloadFile","filename","start","end","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","openDB","upgrade","createObjectStore","autoIncrement","navigator","onLine","checkDatabase","saveRecord","record","put","saveCategories","categories","Object","keys","forEach","category","clear","c","loadCategories","getAll","saveWallChartData","loadWallChartData","localStorage","getItem","uploaded","severity","undefined","message","open","pendingExpenses","length","pendingIncome","console","error","AuthContext","createContext","Auth","loggedIn","user","setAuth","useAuth","useContext","AuthProvider","useReducer","action","type","payload","setItem","Provider","children","StateContext","alertState","setAlertState","loading","setLoading","useStateContext","StateProvider","AddRecordsForm","initialFormState","date","Date","now","NaN","person_id","broad_category_id","narrow_category_id","vendor","notes","formState","setFormState","currentBroadCategory","setCurrentBroadCategory","currentNarrowCategories","setCurrentNarrowCategories","handleFormChange","narrowCategories","preventDefault","formStateConvertedDate","toLocaleDateString","reloadWallChart","DialogContent","close","handleClose","Typography","variant","onSubmit","utils","DateFnsUtils","disableToolbar","fullWidth","format","margin","label","KeyboardButtonProps","InputLabelProps","shrink","step","FormControl","formControl","InputLabel","htmlFor","Select","labelId","MenuItem","person","Button","source","grow","flexGrow","menuButton","marginRight","spacing","title","textAlign","sectionDesktop","display","breakpoints","up","sectionMobile","MyAppBar","setEditOpen","React","anchorEl","setAnchorEl","isMenuOpen","Boolean","edit","handleMenuClose","logout","emptyDatabase","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","AppBar","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","StyledTableCell","head","DarkTableRow","cursor","LightTableRow","ExtraLightTableRow","PivotTable","show","setShow","pivotState","reduce","b","broad_category","total","parseFloat","narrow_category","showState","bCat","newShow","toggleShowRow","toFixed","nCat","Form","handleFormSubmit","Container","Card","form","WallChart","Box","maxHeight","height","options","maintainAspectRatio","scales","xAxes","ticks","fontColor","gridLines","zeroLineColor","drawOnChartArea","yAxes","callback","toString","tooltips","callbacks","tooltipItem","Number","yLabel","Edit","has_person","checked","updatedCategories","setCategories","card","CardContent","FormControlLabel","control","Checkbox","Home","useTheme","getUTCFullYear","getUTCMonth","incomeTableState","setIncomeTableState","expensesTableState","setExpensesTableState","categoriesState","setCategoriesState","labels","datasets","fill","borderColor","secondary","wallChartData","setWallChartData","formatDates","day","getUTCDate","dateString","route","response","assignId","dataListItem","index","newExpensesTableStateData","updatedRow","err","newIncomeTableStateData","reloadWallChartData","log","home","selectEmpty","marginTop","justifyContent","flexWrap","down","logoutBtn","top","right","downloadBtn","editBtn","left","offline","speedDial","bottom","dialog","datePicker","marginLeft","speedDialOpen","setSpeedDialOpen","actions","icon","setAddExpensesOpen","operation","setAddIncomeOpen","addExpensesOpen","addIncomeOpen","editOpen","checkAndDisplaySuccess","result","addEventListener","removeEventListener","Dialog","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipOpen","heading","fontFamily","Signup","username","password","signupFormState","setSignupFormState","formSubmit","signupBtn","float","sidebar","link","Login","loginFormState","setLoginFormState","signupOpen","setSignupOpen","inputChange","newToken","to","Grid","container","item","xs","gutterBottom","Alert","elevation","snackbar","CustomizedSnackbar","reason","Snackbar","autoHideDuration","defaultTheme","createMuiTheme","green","deepPurple","overrides","MuiPickersBasePicker","MuiCard","MuiDialogContent","MuiPickersCalendarHeader","iconButton","ProtectedRoute","Component","rest","render","App","backdrop","zIndex","catch","testDatabase","ThemeProvider","CssBaseline","path","setLoggedIn","exact","Backdrop","CircularProgress","disableShrink","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","process","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f1d2b427.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  DataListStateType,\n  TableDataEntry,\n  AllDataListsType,\n} from \"../interfaces/Interfaces\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport {\n  IconButton,\n  TableCell,\n  TableRow,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { withStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default,\n      },\n      \"&:nth-of-type(even)\": {\n        backgroundColor: blueGrey[800],\n      },\n      \"& input\": {\n        backgroundColor: \"inherit\",\n        paddingLeft: 0,\n      },\n    },\n  })\n)(TableRow);\n\nexport default function InputRow(props: {\n  entry: TableDataEntry;\n  i: number;\n  fields: { name: string }[];\n  dataLists?: AllDataListsType;\n  handleChange: Function;\n  handleUpdate: Function;\n  deleteEntry: Function;\n  classes: string;\n}) {\n  // State controls\n  const [state, setState] = useState<TableDataEntry>({ amount: \"\" });\n\n  function handleInputRowChange(\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    let { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  }\n\n  // Helper function to create datalists for category and person fields\n  // This helps the user make a valid entry\n  function makeDataList(propsState: DataListStateType[], id: string) {\n    return (\n      <datalist id={id}>\n        {propsState.map((entry: DataListStateType) => {\n          return <option value={entry.name} key={entry.id} />;\n        })}\n      </datalist>\n    );\n  }\n\n  // Set props to state on render\n  useEffect(() => {\n    setState(props.entry);\n  }, [props.entry]);\n\n  return (\n    <StyledTableRow>\n      {props.fields\n        .filter((column) => !column.name.includes(\"id\"))\n        .map((column) => {\n          return (\n            <TableCell className={props.classes}>\n              <TextField\n                name={column.name}\n                // On blur, update state of entire table via handleChange dispatch in props\n                onBlur={(\n                  e: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>\n                ) => {\n                  props.handleChange(e, props.i);\n                }}\n                onChange={handleInputRowChange}\n                className=\"tableInput\"\n                value={state[column.name as keyof TableDataEntry] || \"\"}\n                inputProps={{\n                  list: column.name,\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      {column.name === \"amount\" ? \"$\" : null}\n                    </InputAdornment>\n                  ),\n                  disableUnderline: true,\n                }}\n                style={{ width: \"80%\" }}\n              />\n              {column.name === \"person\" && props.dataLists?.persons\n                ? makeDataList(props.dataLists?.persons, column.name)\n                : null}\n              {column.name === \"narrow_category\" &&\n              props.dataLists?.narrow_categories\n                ? makeDataList(props.dataLists?.narrow_categories, column.name)\n                : null}\n              {column.name === \"broad_category\" &&\n              props.dataLists?.broad_categories\n                ? makeDataList(props.dataLists?.broad_categories, column.name)\n                : null}\n            </TableCell>\n          );\n        })}\n      <TableCell className={props.classes}>\n        <IconButton color=\"primary\" onClick={() => props.handleUpdate(props.i)}>\n          <SaveIcon />\n        </IconButton>\n      </TableCell>\n      <TableCell className={props.classes}>\n        <IconButton\n          aria-label=\"delete\"\n          color=\"secondary\"\n          onClick={() => props.deleteEntry(state.id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </TableCell>\n    </StyledTableRow>\n  );\n}\n","import React, { useEffect, createRef } from \"react\";\nimport InputRow from \"./InputRow\";\nimport type {\n  TableDataEntry,\n  AllDataListsType,\n} from \"../interfaces/Interfaces\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default function ReportTable(props: {\n  state: {\n    schema: {\n      fields: { name: string }[];\n    };\n    data: TableDataEntry[];\n  };\n  dataLists?: AllDataListsType;\n  handleChange: Function;\n  handleUpdate: Function;\n  deleteEntry: Function;\n  form?: string;\n}) {\n  // Styling\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      table: {\n        minWidth: 650,\n        padding: \"0 1em\",\n      },\n      tableCellHead: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n        padding: 10,\n        fontSize: 16,\n      },\n      tableCellBody: {\n        fontSize: 14,\n        padding: 0,\n        maxWidth: \"10ch\",\n      },\n    })\n  );\n  const classes = useStyles();\n\n  // Component scrolls into view on mount\n  const myRef = createRef<HTMLTableElement>();\n  const executeScroll = () => {\n    if (myRef.current) {\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(() => {\n    executeScroll();\n  });\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} ref={myRef}>\n        <TableHead>\n          <TableRow>\n            {props.state.schema.fields\n              .filter((column) => !column.name.includes(\"id\"))\n              .map((column) => {\n                return (\n                  <TableCell\n                    className={classes.tableCellHead}\n                    key={column.name}\n                    style={{ textTransform: \"capitalize\" }}\n                  >\n                    {column.name.replace(\"_\", \" \")}\n                  </TableCell>\n                );\n              })}\n            <TableCell className={classes.tableCellHead}>\n              <span>Save</span>\n            </TableCell>\n            <TableCell className={classes.tableCellHead}>\n              <span>Delete</span>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody className=\"tableBody\">\n          {props.state.data.map((entry: TableDataEntry, i: number) => (\n            <InputRow\n              entry={entry}\n              i={i}\n              key={i}\n              fields={props.state.schema.fields}\n              handleChange={props.handleChange}\n              handleUpdate={props.handleUpdate}\n              dataLists={props.dataLists}\n              deleteEntry={props.deleteEntry}\n              classes={classes.tableCellBody}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import type {\n  AllDataListsType,\n  FormStateType,\n  TableDataEntry,\n  TableType,\n  ExpensesFormType,\n  IncomeFormType,\n  EditFormType,\n  WallChartDataType,\n} from \"../interfaces/Interfaces\";\n\nfunction checkStatus<T>(res: Response, parseMethod: string): Promise<T> {\n  if (res.status === 401) {\n    throw new Error(\"Unauthorized\");\n  }\n  if (res.status === 404) {\n    throw new Error(\"No Data\");\n  }\n  if (res.status !== 200) {\n    throw new Error(\"Error! \" + res.status);\n  }\n  if (parseMethod === \"json\") {\n    return res.json() as Promise<T>;\n  } else if (parseMethod === \"text\") {\n    return (res.text() as unknown) as Promise<T>;\n  } else {\n    return (res.blob() as unknown) as Promise<T>;\n  }\n}\n\nconst API = {\n  addCategories: function (\n    token: string | null,\n    data: EditFormType\n  ): Promise<Response | string> {\n    return fetch(`/api/categories/`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  getCategories: function (token: string | null): Promise<AllDataListsType> {\n    return fetch(`/api/categories/`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<AllDataListsType>(res, \"json\"));\n  },\n  expenses: function (\n    token: string | null,\n    yearMonthObj: FormStateType\n  ): Promise<{ schema: { fields: [] }; data: TableDataEntry[] }> {\n    return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<TableType>(res, \"json\"));\n  },\n  postExpenses: function (\n    token: string | null,\n    data: ExpensesFormType\n  ): Promise<Response | string> {\n    return fetch(`/api/expenses/`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  postBatchExpenses: function (\n    token: string | null,\n    data: ExpensesFormType[]\n  ): Promise<Response | string> {\n    return fetch(`/api/expenses/batch`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  postIncome: function (\n    token: string | null,\n    data: IncomeFormType\n  ): Promise<Response | string> {\n    return fetch(`/api/income/`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  postBatchIncome: function (\n    token: string | null,\n    data: IncomeFormType[]\n  ): Promise<Response | string> {\n    return fetch(`/api/income/batch`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  deleteExpenses: function (\n    token: string | null,\n    id: number | undefined\n  ): Promise<Response | string> {\n    return fetch(`/api/expenses/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  updateExpenses: function (\n    token: string | null,\n    data: TableDataEntry\n  ): Promise<Response | string> {\n    return fetch(`/api/expenses/${data.id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  income: function (\n    token: string | null,\n    yearMonthObj: FormStateType\n  ): Promise<{ schema: { fields: [] }; data: TableDataEntry[] }> {\n    return fetch(`/api/income/${yearMonthObj.year}/${yearMonthObj.month}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<TableType>(res, \"json\"));\n  },\n  updateIncome: function (\n    token: string | null,\n    data: TableDataEntry\n  ): Promise<Response | string> {\n    return fetch(`/api/income/${data.id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  deleteIncome: function (\n    token: string | null,\n    id: number | undefined\n  ): Promise<Response | string> {\n    return fetch(`/api/income/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  pivot: function (\n    token: string | null,\n    yearMonthObj: FormStateType\n  ): Promise<{ schema: { fields: [] }; data: TableDataEntry[] }> {\n    return fetch(`/api/expenses/${yearMonthObj.year}/${yearMonthObj.month}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<TableType>(res, \"json\"));\n  },\n  wallchart: function (token: string | null): Promise<WallChartDataType> {\n    return fetch(`/wallchart`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<WallChartDataType>(res, \"json\"));\n  },\n\n  dataList: function (token: string | null): Promise<AllDataListsType> {\n    return fetch(`/api/datalists`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) => checkStatus<AllDataListsType>(res, \"json\"));\n  },\n  signup: function (data: {\n    username: string;\n    password: string;\n  }): Promise<Response | string> {\n    return fetch(\"/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<string>(res, \"text\"));\n  },\n  login: function (data: {\n    username: string;\n    password: string;\n  }): Promise<{ token: string }> {\n    return fetch(\"/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((res) => checkStatus<{ token: string }>(res, \"json\"));\n  },\n  checkAuth: function (\n    token: string | null\n  ): Promise<{ username: string; token: string }> {\n    return fetch(`/auth/checkAuth`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }).then((res) =>\n      checkStatus<{ username: string; token: string }>(res, \"json\")\n    );\n  },\n  downloadFile: function (\n    token: string | null,\n    filename: string,\n    start: string,\n    end: string\n  ): void {\n    fetch(`/api/expenses/file/${start}/${end}`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => checkStatus<Blob>(res, \"blob\"))\n      .then((blob) => {\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement(\"a\");\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n      });\n  },\n};\n\nexport default API;\n","import { openDB, DBSchema, IDBPDatabase } from \"idb\";\nimport {\n  AlertStateType,\n  AllDataListsType,\n  ExpensesFormType,\n  IncomeFormType,\n  WallChartDataType,\n} from \"../interfaces/Interfaces\";\nimport API from \"./API\";\n\ninterface financesDB extends DBSchema {\n  expenses: {\n    value: {\n      amount: number;\n      date: Date | null;\n      person_id: number;\n      vendor: string;\n      broad_category_id: number;\n      narrow_category_id: number;\n      notes: string;\n    };\n    key: string;\n  };\n  income: {\n    value: {\n      date: Date | null;\n      amount: number;\n      person_id: number;\n      source: string;\n    };\n    key: string;\n  };\n  broad_categories: {\n    value: {\n      name: string;\n      id: number;\n      person: boolean;\n    };\n    key: string;\n  };\n  narrow_categories: {\n    value: {\n      name: string;\n      id: number;\n      broad_category_id: number;\n    };\n    key: string;\n  };\n  persons: {\n    value: {\n      name: string;\n      id: number;\n    };\n    key: string;\n  };\n  wallchart: {\n    value: {\n      labels: string[];\n      income: number[];\n      expenses: number[];\n    };\n    key: string;\n  };\n}\n\nlet db: IDBPDatabase<financesDB>;\nexport async function testDatabase() {\n  db = await openDB<financesDB>(\"finances\", 1, {\n    async upgrade(db) {\n      db.createObjectStore(\"expenses\", { autoIncrement: true });\n      db.createObjectStore(\"income\", { autoIncrement: true });\n      db.createObjectStore(\"broad_categories\", { autoIncrement: true });\n      db.createObjectStore(\"narrow_categories\", { autoIncrement: true });\n      db.createObjectStore(\"persons\", { autoIncrement: true });\n      db.createObjectStore(\"wallchart\", { autoIncrement: true });\n    },\n  });\n\n  if (navigator.onLine) {\n    checkDatabase();\n  }\n}\n\nexport async function saveRecord(\n  table: \"income\" | \"expenses\",\n  record: ExpensesFormType | IncomeFormType\n) {\n  await db.put(table, record);\n}\n\nexport async function saveCategories(categories: AllDataListsType) {\n  (Object.keys(categories) as Array<keyof AllDataListsType>).forEach(\n    (category: keyof AllDataListsType) => {\n      db.clear(category);\n      categories[category as keyof AllDataListsType]?.forEach((c) => {\n        db.put(category, c);\n      });\n    }\n  );\n}\n\nexport async function loadCategories() {\n  let tables: Array<keyof AllDataListsType> = [\n    \"broad_categories\",\n    \"narrow_categories\",\n    \"persons\",\n  ];\n  let categories: AllDataListsType = {\n    broad_categories: [],\n    narrow_categories: [],\n    persons: [],\n  };\n  tables.map(async (table) => {\n    let category = await db.getAll(table);\n    categories[table] = category;\n  });\n  return categories;\n}\n\nexport async function saveWallChartData(data: WallChartDataType) {\n  await db.clear(\"wallchart\");\n  db.put(\"wallchart\", data);\n}\n\nexport async function loadWallChartData(): Promise<WallChartDataType> {\n  let data = await db.getAll(\"wallchart\");\n  return data[0];\n}\n\nexport async function emptyDatabase(): Promise<string> {\n  try {\n    await db.clear(\"expenses\");\n    await db.clear(\"income\");\n    return \"pendingFinances cleared!\";\n  } catch (err) {\n    return err;\n  }\n}\n\nexport async function checkDatabase() {\n  let token = localStorage.getItem(\"token\");\n  let uploaded: AlertStateType = {\n    severity: undefined,\n    message: \"\",\n    open: false,\n  };\n  try {\n    const pendingExpenses = await db.getAll(\"expenses\");\n    if (pendingExpenses.length > 0) {\n      await API.postBatchExpenses(token, pendingExpenses);\n      // delete records if successful\n      db.clear(\"expenses\");\n      uploaded = {\n        severity: \"success\",\n        message: \"Saved Expenses uploaded\",\n        open: true,\n      };\n    }\n    const pendingIncome = await db.getAll(\"income\");\n    if (pendingIncome.length > 0) {\n      await API.postBatchIncome(token, pendingIncome);\n      // delete records if successful\n      db.clear(\"income\");\n      uploaded = {\n        severity: \"success\",\n        message: \"Saved Income uploaded\",\n        open: true,\n      };\n    }\n  } catch (err) {\n    console.error(err);\n    uploaded = {\n      severity: \"error\",\n      message: \"Error uploading saved records\",\n      open: true,\n    };\n  }\n  return uploaded;\n}\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { Auth, AuthContextType } from \"../interfaces/Interfaces\";\n\nconst AuthContext = createContext<AuthContextType>({\n  Auth: {\n    loggedIn: false,\n    user: \"\",\n    token: \"\",\n  },\n  setAuth: (): void => {},\n});\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider(props: { children: React.ReactNode }) {\n  // Reducer state for Authentication values\n  const reducer = (\n    state: Auth,\n    action: { type: string; payload?: { user: string; token: string } }\n  ): Auth => {\n    if (action.type === \"LOGIN\" && action.payload) {\n      localStorage.setItem(\"user\", action.payload.user);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        loggedIn: true,\n        user: action.payload.user,\n        token: action.payload.token,\n      };\n    } else if (action.type === \"LOGOUT\") {\n      localStorage.clear();\n      return {\n        ...state,\n        loggedIn: false,\n        user: \"\",\n        token: \"\",\n      };\n    } else {\n      return state;\n    }\n  };\n\n  const [Auth, setAuth] = useReducer(reducer, {\n    loggedIn: false,\n    user: \"\",\n    token: \"\",\n  });\n\n  const value = {\n    Auth,\n    setAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>{props.children}</AuthContext.Provider>\n  );\n}\n","import React, { createContext, useContext, useState } from \"react\";\nimport { AlertStateType, StateContextType } from \"../interfaces/Interfaces\";\n\nconst StateContext = createContext<StateContextType>({\n  alertState: {\n    severity: undefined,\n    message: \"\",\n    open: false,\n  },\n  setAlertState: (): void => {},\n  loading: false,\n  setLoading: (): void => {},\n});\n\nexport function useStateContext() {\n  return useContext(StateContext);\n}\n\nexport function StateProvider(props: { children: React.ReactNode }) {\n  // State for alert snackbars\n  const [alertState, setAlertState] = useState<AlertStateType>({\n    severity: undefined,\n    message: \"\",\n    open: false,\n  });\n\n  // Loading Backdrop display state\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const value = {\n    alertState,\n    setAlertState,\n    loading,\n    setLoading,\n  };\n\n  return (\n    <StateContext.Provider value={value}>\n      {props.children}\n    </StateContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport { saveRecord } from \"../utils/db\";\nimport { useAuth } from \"../Context/Auth\";\nimport {\n  ExpensesFormType,\n  AllDataListsType,\n  DataListStateType,\n} from \"../interfaces/Interfaces\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  InputAdornment,\n  Typography,\n  DialogContent,\n  IconButton,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { useStateContext } from \"../Context/State\";\n\nexport default function AddRecordsForm(props: {\n  classes: { root: string; formControl: string; close: string };\n  handleClose: Function;\n  categories: AllDataListsType;\n  setLoading: Function;\n  reloadWallChart: Function;\n}) {\n  const { Auth, setAuth } = useAuth();\n  const { setAlertState } = useStateContext();\n  const initialFormState = {\n    date: new Date(Date.now()),\n    amount: NaN,\n    person_id: NaN,\n    broad_category_id: NaN,\n    narrow_category_id: NaN,\n    vendor: \"\",\n    notes: \"\",\n  };\n\n  // Form control state\n  const [formState, setFormState] = useState<ExpensesFormType>(\n    initialFormState\n  );\n\n  // State to hold category info\n  const [\n    currentBroadCategory,\n    setCurrentBroadCategory,\n  ] = useState<DataListStateType>({\n    name: \"\",\n    id: NaN,\n  });\n\n  const [currentNarrowCategories, setCurrentNarrowCategories] = useState<\n    DataListStateType[]\n  >([]);\n\n  function handleFormChange(\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }\n    >\n  ): void {\n    let name = event.target.name as keyof typeof formState;\n    setFormState({ ...formState, [name]: event.target.value });\n    if (name === \"broad_category_id\") {\n      let category = props.categories.broad_categories.filter(\n        (i) => i.id === event.target.value\n      )[0];\n      setCurrentBroadCategory(category);\n      let narrowCategories = props.categories.narrow_categories.filter(\n        (i) => i.broad_category_id === category.id\n      );\n      setCurrentNarrowCategories(narrowCategories);\n    }\n  }\n\n  function handleDateChange(date: Date | null) {\n    setFormState({ ...formState, date: date });\n  }\n\n  async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\n    event.preventDefault();\n    if (\n      !formState.date ||\n      !formState.amount ||\n      !formState.broad_category_id ||\n      !formState.vendor\n    ) {\n      setAlertState({\n        severity: \"error\",\n        message: \"Please fill out all fields\",\n        open: true,\n      });\n      return;\n    }\n    let formStateConvertedDate: any = { ...formState };\n    formStateConvertedDate.date = formStateConvertedDate.date?.toLocaleDateString(\n      \"en-US\"\n    );\n    try {\n      props.setLoading(true);\n      await API.postExpenses(Auth.token, formStateConvertedDate);\n      props.setLoading(false);\n      setAlertState({\n        severity: \"success\",\n        message: \"Record Saved!\",\n        open: true,\n      });\n      props.reloadWallChart();\n    } catch (err) {\n      props.setLoading(false);\n      if (err.message === \"Error! 500\") {\n        setAlertState({\n          severity: \"error\",\n          message: \"Server Error! Contact Eli\",\n          open: true,\n        });\n        return;\n      } else {\n        saveRecord(\"expenses\", formStateConvertedDate);\n        if (err.message === \"Unauthorized\") {\n          setAuth({ type: \"LOGOUT\" });\n        }\n        setAlertState({\n          severity: \"warning\",\n          message: \"Record Saved Locally\",\n          open: true,\n        });\n      }\n    } finally {\n      setFormState(initialFormState);\n      setCurrentBroadCategory({\n        name: \"\",\n        id: NaN,\n      });\n    }\n  }\n\n  return (\n    <DialogContent>\n      <IconButton\n        className={props.classes.close}\n        onClick={() => {\n          setFormState(initialFormState);\n          props.handleClose();\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>\n        Log Expense\n      </Typography>\n      <form className={props.classes.root} onSubmit={handleFormSubmit}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            fullWidth\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            name=\"Date\"\n            label=\"Date\"\n            value={formState.date}\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n        <TextField\n          onChange={handleFormChange}\n          value={formState.vendor}\n          label=\"Vendor\"\n          name=\"vendor\"\n          type=\"string\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <TextField\n          onChange={handleFormChange}\n          value={formState.amount}\n          label=\"Amount\"\n          name=\"amount\"\n          type=\"number\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n          inputProps={{ step: \"0.01\" }}\n        />\n        <FormControl className={props.classes.formControl}>\n          <InputLabel htmlFor=\"broad_category\">Broad Category</InputLabel>\n          <Select\n            onChange={handleFormChange}\n            value={formState.broad_category_id}\n            name=\"broad_category_id\"\n            labelId=\"broad_category\"\n            label=\"Broad Category\"\n          >\n            {props.categories.broad_categories.map((i) => (\n              <MenuItem value={i.id}>{i.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        {currentNarrowCategories.length > 0 ? (\n          <FormControl className={props.classes.formControl}>\n            <InputLabel htmlFor=\"narrow_category\">Narrow Category</InputLabel>\n            <Select\n              onChange={handleFormChange}\n              value={formState.narrow_category_id}\n              name=\"narrow_category_id\"\n              labelId=\"narrow_category\"\n              label=\"Narrow Category\"\n            >\n              {/* Get the list of narrow categories corresponding to the selected broad category */}\n              {currentNarrowCategories?.map((i) => (\n                <MenuItem value={i.id}>{i.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        ) : null}\n        {currentBroadCategory.person ? (\n          <FormControl className={props.classes.formControl}>\n            <InputLabel htmlFor=\"person_id\">Person</InputLabel>\n            <Select\n              onChange={handleFormChange}\n              value={formState.person_id}\n              name=\"person_id\"\n              labelId=\"person_id\"\n              label=\"Person\"\n            >\n              {props.categories.persons.map((i) => (\n                <MenuItem value={i.id}>{i.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        ) : null}\n        <TextField\n          onChange={handleFormChange}\n          value={formState.notes}\n          label=\"Notes\"\n          name=\"notes\"\n          type=\"string\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n      </form>\n    </DialogContent>\n  );\n}\n","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport { useAuth } from \"../Context/Auth\";\nimport type {\n  IncomeFormType,\n  AllDataListsType,\n} from \"../interfaces/Interfaces\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  InputAdornment,\n  Typography,\n  DialogContent,\n  IconButton,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { saveRecord } from \"../utils/db\";\nimport { useStateContext } from \"../Context/State\";\n\nexport default function AddRecordsForm(props: {\n  classes: { root: string; formControl: string; close: string };\n  handleClose: Function;\n  categories: AllDataListsType;\n  setLoading: Function;\n  reloadWallChart: Function;\n}) {\n  const { Auth, setAuth } = useAuth();\n  const { setAlertState } = useStateContext();\n\n  const initialFormState = {\n    date: new Date(Date.now()),\n    amount: NaN,\n    person_id: NaN,\n    source: \"\",\n  };\n\n  // Form control state\n  const [formState, setFormState] = useState<IncomeFormType>(initialFormState);\n\n  function handleFormChange(\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }\n    >\n  ): void {\n    let name = event.target.name as keyof typeof formState;\n    setFormState({ ...formState, [name]: event.target.value });\n  }\n\n  function handleDateChange(date: Date | null) {\n    setFormState({ ...formState, date: date });\n  }\n\n  async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\n    event.preventDefault();\n    if (\n      !formState.date ||\n      !formState.amount ||\n      !formState.person_id ||\n      !formState.source\n    ) {\n      setAlertState({\n        severity: \"error\",\n        message: \"Please fill out all fields\",\n        open: true,\n      });\n      return;\n    }\n    let formStateConvertedDate: any = { ...formState };\n    try {\n      formStateConvertedDate.date = formStateConvertedDate.date?.toLocaleDateString(\n        \"en-US\"\n      );\n      props.setLoading(true);\n      await API.postIncome(Auth.token, formStateConvertedDate);\n      props.setLoading(false);\n      setAlertState({\n        severity: \"success\",\n        message: \"Record Saved!\",\n        open: true,\n      });\n      props.reloadWallChart();\n    } catch (err) {\n      props.setLoading(false);\n      if (err.message === \"Error! 500\") {\n        setAlertState({\n          severity: \"error\",\n          message: \"Server Error!\",\n          open: true,\n        });\n        return;\n      } else {\n        saveRecord(\"income\", formStateConvertedDate);\n        setAlertState({\n          severity: \"warning\",\n          message: \"Record Saved Locally\",\n          open: true,\n        });\n        if (err.message === \"Unauthorized\") {\n          setAuth({ type: \"LOGOUT\" });\n        }\n      }\n    } finally {\n      setFormState(initialFormState);\n    }\n  }\n\n  return (\n    <DialogContent>\n      <IconButton\n        className={props.classes.close}\n        onClick={() => {\n          setFormState(initialFormState);\n          props.handleClose();\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Typography variant=\"h5\" component=\"h5\" className={props.classes.root}>\n        Log Income\n      </Typography>\n      <form className={props.classes.root} onSubmit={handleFormSubmit}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            name=\"Date\"\n            label=\"Date\"\n            value={formState.date}\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n        <TextField\n          onChange={handleFormChange}\n          value={formState.source}\n          label=\"Source\"\n          name=\"source\"\n          type=\"string\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <TextField\n          onChange={handleFormChange}\n          value={formState.amount}\n          label=\"Amount\"\n          name=\"amount\"\n          type=\"number\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n          inputProps={{ step: \"0.01\" }}\n        />\n        <FormControl className={props.classes.formControl}>\n          <InputLabel htmlFor=\"person_id\">Person</InputLabel>\n          <Select\n            onChange={handleFormChange}\n            value={formState.person_id}\n            name=\"person_id\"\n            labelId=\"person_id\"\n            label=\"Person\"\n          >\n            {props.categories.persons.map((i) => (\n              <MenuItem value={i.id}>{i.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n      </form>\n    </DialogContent>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { useAuth } from \"../Context/Auth\";\nimport { emptyDatabase } from \"../utils/db\";\nimport API from \"../utils/API\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(1),\n    },\n    title: {\n      textAlign: \"center\",\n      textTransform: \"capitalize\",\n    },\n    sectionDesktop: {\n      display: \"none\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"flex\",\n      },\n    },\n    sectionMobile: {\n      display: \"flex\",\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"none\",\n      },\n    },\n  })\n);\n\nexport default function MyAppBar({ setEditOpen }: { setEditOpen: Function }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const { Auth, setAuth } = useAuth();\n\n  function edit(): void {\n    setEditOpen(true);\n  }\n\n  function downloadFile(): void {\n    API.downloadFile(\n      Auth.token,\n      `${Auth.user}_expenses.xlsx`,\n      \"2020-01-01\",\n      \"2020-12-31\"\n    );\n    handleMenuClose();\n  }\n\n  function logout(): void {\n    setAuth({ type: \"LOGOUT\" });\n    emptyDatabase();\n  }\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={edit}>Edit</MenuItem>\n      <MenuItem onClick={downloadFile}>Downloads</MenuItem>\n      <MenuItem onClick={logout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {Auth.user}'s Finances\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Button color=\"inherit\" onClick={edit}>\n              Edit\n            </Button>\n\n            <Button\n              color=\"inherit\"\n              onClick={downloadFile}\n              // edge=\"end\"\n            >\n              Download\n            </Button>\n            <Button\n              color=\"inherit\"\n              onClick={logout}\n              // edge=\"end\"\n            >\n              Logout\n            </Button>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  TableRow,\n  TableHead,\n} from \"@material-ui/core\";\nimport { withStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { TableDataEntry } from \"../interfaces/Interfaces\";\nimport { blueGrey } from \"@material-ui/core/colors\";\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      padding: 10,\n      fontSize: 16,\n    },\n    body: {\n      padding: 10,\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nconst DarkTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.default,\n      cursor: \"pointer\",\n    },\n  })\n)(TableRow);\n\nconst LightTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: blueGrey[800],\n    },\n  })\n)(TableRow);\n\nconst ExtraLightTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: blueGrey[700],\n    },\n  })\n)(TableRow);\n\nexport default function PivotTable(props: {\n  state: {\n    schema: {\n      fields: { name: string }[];\n    };\n    data: TableDataEntry[];\n  };\n}) {\n  // Controls which rows are expanded to view subcategories\n  const [show, setShow] = useState<boolean[]>([false]);\n  function toggleShowRow(i: number) {\n    let newShow = [...show];\n    newShow[i] = !newShow[i];\n    setShow(newShow);\n  }\n\n  // Calling reduce on our props data to create our pivot table data\n  // Yes, this will re-run on every render, but until I have the time to get the TS errors worked out with the useEffect route, we'll do it this way\n  const pivotState = props.state.data.reduce((a, b) => {\n    if (b.broad_category) {\n      if (a[b.broad_category]) {\n        a[b.broad_category].total += parseFloat(b.amount);\n      } else {\n        a[b.broad_category] = {\n          total: parseFloat(b.amount),\n          narrow_categories: {},\n        };\n      }\n      if (b.narrow_category) {\n        if (a[b.broad_category].narrow_categories[b.narrow_category]) {\n          a[b.broad_category].narrow_categories[\n            b.narrow_category\n          ].total += parseFloat(b.amount);\n        } else {\n          a[b.broad_category].narrow_categories[b.narrow_category] = {\n            total: parseFloat(b.amount),\n            persons: {},\n          };\n        }\n        if (b.person) {\n          if (\n            a[b.broad_category].narrow_categories[b.narrow_category].persons[\n              b.person\n            ]\n          ) {\n            a[b.broad_category].narrow_categories[b.narrow_category].persons[\n              b.person\n            ] += parseFloat(b.amount);\n          } else {\n            a[b.broad_category].narrow_categories[b.narrow_category].persons[\n              b.person\n            ] = parseFloat(b.amount);\n          }\n        }\n      } else if (b.person) {\n        if (a[b.broad_category].narrow_categories[\"--\"]?.persons[b.person]) {\n          a[b.broad_category].narrow_categories[\"--\"].persons[\n            b.person\n          ] += parseFloat(b.amount);\n          a[b.broad_category].narrow_categories[\"--\"].total += parseFloat(\n            b.amount\n          );\n        } else {\n          a[b.broad_category].narrow_categories = {\n            ...a[b.broad_category].narrow_categories,\n            \"--\": {\n              persons: { [b.person]: parseFloat(b.amount) },\n              total: parseFloat(b.amount),\n            },\n          };\n        }\n      }\n    }\n    return a;\n  }, {} as any);\n\n  // Set every broad category to be collapsed\n  useEffect(() => {\n    let showState = Object.keys(pivotState).map((i: any) => false);\n    setShow(showState);\n  }, [props]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Broad category</StyledTableCell>\n            <StyledTableCell>Narrow Category</StyledTableCell>\n            <StyledTableCell>Person</StyledTableCell>\n            <StyledTableCell>Amount</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.keys(pivotState).map((bCat, i) => (\n            <>\n              <DarkTableRow key={i} onClick={() => toggleShowRow(i)}>\n                <StyledTableCell>{bCat}</StyledTableCell>\n                <StyledTableCell>TOTAL</StyledTableCell>\n                <StyledTableCell>{/* Empty Cell */}</StyledTableCell>\n                <StyledTableCell>\n                  ${pivotState[bCat].total.toFixed(2)}\n                </StyledTableCell>\n              </DarkTableRow>\n              {pivotState[bCat].narrow_categories && show[i]\n                ? Object.keys(pivotState[bCat].narrow_categories).map(\n                    (nCat) => (\n                      <>\n                        <LightTableRow>\n                          <StyledTableCell>{/* Empty Cell */}</StyledTableCell>\n                          <StyledTableCell>{nCat}</StyledTableCell>\n                          <StyledTableCell>TOTAL</StyledTableCell>\n                          <StyledTableCell>\n                            $\n                            {pivotState[bCat].narrow_categories[\n                              nCat\n                            ].total.toFixed(2)}\n                          </StyledTableCell>\n                        </LightTableRow>\n                        {pivotState[bCat].narrow_categories[nCat].persons\n                          ? Object.keys(\n                              pivotState[bCat].narrow_categories[nCat].persons\n                            ).map((person: string) => (\n                              <ExtraLightTableRow>\n                                <StyledTableCell></StyledTableCell>\n                                <StyledTableCell></StyledTableCell>\n                                <StyledTableCell>{person}</StyledTableCell>\n                                <StyledTableCell>\n                                  $\n                                  {pivotState[bCat].narrow_categories[\n                                    nCat\n                                  ].persons[person].toFixed(2)}\n                                </StyledTableCell>\n                              </ExtraLightTableRow>\n                            ))\n                          : null}\n                      </>\n                    )\n                  )\n                : null}\n            </>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport {\n  Container,\n  Card,\n  FormControl,\n  InputLabel,\n  Select,\n  TextField,\n  MenuItem,\n  Button,\n} from \"@material-ui/core\";\nimport { FormStateType } from \"../interfaces/Interfaces\";\n\nexport default function Form({\n  classes,\n  handleFormSubmit,\n  handleFormChange,\n  formState,\n}: {\n  classes: {\n    root: string;\n    formControl: string;\n  };\n  handleFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  handleFormChange: (\n    event:\n      | React.ChangeEvent<\n          | HTMLInputElement\n          | HTMLTextAreaElement\n          | { name?: string; value: unknown }\n        >\n      | React.ChangeEvent<HTMLSelectElement>\n  ) => void;\n  formState: FormStateType;\n}) {\n  return (\n    <Container className={classes.root}>\n      <Card variant=\"outlined\">\n        <h2 className={classes.root}>Reports</h2>\n        <form onSubmit={handleFormSubmit} className={classes.root}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"form\">Report</InputLabel>\n            <Select\n              name=\"form\"\n              label=\"Report\"\n              labelId=\"form\"\n              value={formState.form}\n              onChange={handleFormChange}\n            >\n              <MenuItem value=\"income\">Income</MenuItem>\n              <MenuItem value=\"expenses\">Expenses</MenuItem>\n              <MenuItem value=\"pivot\">Pivot Table</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            onChange={handleFormChange}\n            value={formState.year}\n            label=\"Year\"\n            name=\"year\"\n            type=\"number\"\n            variant=\"outlined\"\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"month2\">Month</InputLabel>\n            <Select\n              onChange={handleFormChange}\n              value={formState.month}\n              name=\"month\"\n              labelId=\"month2\"\n              label=\"Month\"\n            >\n              <MenuItem value={1}>January</MenuItem>\n              <MenuItem value={2}>February</MenuItem>\n              <MenuItem value={3}>March</MenuItem>\n              <MenuItem value={4}>April</MenuItem>\n              <MenuItem value={5}>May</MenuItem>\n              <MenuItem value={6}>June</MenuItem>\n              <MenuItem value={7}>July</MenuItem>\n              <MenuItem value={8}>August</MenuItem>\n              <MenuItem value={9}>September</MenuItem>\n              <MenuItem value={10}>October</MenuItem>\n              <MenuItem value={11}>November</MenuItem>\n              <MenuItem value={12}>December</MenuItem>\n            </Select>\n          </FormControl>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            View\n          </Button>\n        </form>\n      </Card>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport { Line } from \"react-chartjs-2\";\nimport { ChartJSDataType } from \"../interfaces/Interfaces\";\n\nexport default function WallChart({ data }: { data: ChartJSDataType }) {\n  return (\n    <Container>\n      <Box maxHeight=\"50vh\">\n        <Line\n          data={data}\n          height={300}\n          width={600}\n          options={{\n            maintainAspectRatio: false,\n            scales: {\n              xAxes: [\n                {\n                  ticks: {\n                    fontColor: \"#fff\",\n                  },\n                  gridLines: {\n                    color: \"#fff\",\n                    zeroLineColor: \"#fff\",\n                    drawOnChartArea: false,\n                  },\n                },\n              ],\n              yAxes: [\n                {\n                  ticks: {\n                    fontColor: \"#fff\",\n                    callback: function (value) {\n                      if (value >= 1000) {\n                        return (\n                          \"$\" +\n                          value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        );\n                      } else {\n                        return \"$\" + value;\n                      }\n                    },\n                  },\n                  gridLines: {\n                    color: \"#fff\",\n                    zeroLineColor: \"#fff\",\n                    drawOnChartArea: false,\n                  },\n                },\n              ],\n            },\n            tooltips: {\n              callbacks: {\n                label: function (tooltipItem, data) {\n                  return (\n                    \"$\" +\n                    Number(tooltipItem.yLabel)\n                      .toString()\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  );\n                },\n              },\n            },\n          }}\n        />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  DialogContent,\n  Typography,\n  Button,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Select,\n  MenuItem,\n  Checkbox,\n  Card,\n  CardContent,\n  IconButton,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { AllDataListsType, EditFormType } from \"../interfaces/Interfaces\";\nimport API from \"../utils/API\";\nimport { useAuth } from \"../Context/Auth\";\nimport { useStateContext } from \"../Context/State\";\n\nexport default function Edit(props: {\n  handleClose: Function;\n  classes: { root: string; formControl: string; card: string; close: string };\n  categories: AllDataListsType;\n  setCategories: Function;\n  setLoading: Function;\n}) {\n  const { Auth, setAuth } = useAuth();\n  const { setAlertState } = useStateContext();\n\n  const initialFormState = {\n    person: \"\",\n    broad_category: \"\",\n    broad_category_id: NaN,\n    narrow_category: \"\",\n    has_person: false,\n  };\n\n  // Form control state\n  const [formState, setFormState] = useState<EditFormType>(initialFormState);\n\n  function handleFormChange(\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown }\n    >\n  ): void {\n    let name = event.target.name as keyof EditFormType;\n    let value = event.target.value;\n    if (name === \"has_person\") {\n      // Casting event.target so that ts knows check property will be there\n      value = (event.target as HTMLInputElement).checked;\n    }\n    setFormState({ ...formState, [name]: value });\n  }\n\n  async function handleFormSubmit(\n    event: React.SyntheticEvent,\n    form: \"person\" | \"narrow_category\" | \"broad_category\"\n  ): Promise<any> {\n    event.preventDefault();\n    props.setLoading(true);\n    let data;\n    try {\n      switch (form) {\n        case \"person\":\n          data = { person: formState.person };\n          if (!data.person) {\n            throw new Error(\"Empty Input\");\n          }\n          break;\n        case \"broad_category\":\n          data = {\n            broad_category: formState.broad_category,\n            has_person: formState.has_person,\n          };\n          if (!data.broad_category) {\n            throw new Error(\"Empty Input\");\n          }\n          break;\n        case \"narrow_category\":\n          data = {\n            narrow_category: formState.narrow_category,\n            broad_category_id: formState.broad_category_id,\n            has_person: formState.has_person,\n          };\n          if (!data.narrow_category || !data.broad_category_id) {\n            throw new Error(\"Empty Input\");\n          }\n          break;\n      }\n      await API.addCategories(Auth.token, data);\n      setAlertState({\n        severity: \"success\",\n        message: \"Category Added!\",\n        open: true,\n      });\n      let updatedCategories = await API.getCategories(Auth.token);\n      props.setCategories(updatedCategories);\n    } catch (err) {\n      switch (err.message) {\n        case \"Error! 500\":\n          setAlertState({\n            severity: \"error\",\n            message: \"Server Error!\",\n            open: true,\n          });\n          break;\n        case \"Unauthorized\":\n          setAuth({ type: \"LOGOUT\" });\n          break;\n        case \"Empty Input\":\n          setAlertState({\n            severity: \"error\",\n            message: \"Please fill out all fields\",\n            open: true,\n          });\n          break;\n        default:\n          setAlertState({\n            severity: \"error\",\n            message: \"You must be connected to the internet to add categories\",\n            open: true,\n          });\n      }\n    } finally {\n      props.setLoading(false);\n      setFormState(initialFormState);\n    }\n  }\n\n  return (\n    <DialogContent>\n      <IconButton\n        onClick={() => props.handleClose()}\n        className={props.classes.close}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Card className={props.classes.card}>\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            className={props.classes.root}\n          >\n            Add a Person\n          </Typography>\n          <form\n            className={props.classes.root}\n            onSubmit={(e: React.SyntheticEvent) =>\n              handleFormSubmit(e, \"person\")\n            }\n          >\n            <TextField\n              onChange={handleFormChange}\n              value={formState.person}\n              label=\"Person\"\n              name=\"person\"\n              type=\"string\"\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Add\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n      <Card className={props.classes.card}>\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            className={props.classes.root}\n          >\n            Add a Broad Category\n          </Typography>\n          <form\n            className={props.classes.root}\n            onSubmit={(e: React.SyntheticEvent) =>\n              handleFormSubmit(e, \"broad_category\")\n            }\n          >\n            <TextField\n              onChange={handleFormChange}\n              value={formState.broad_category}\n              label=\"Broad Category\"\n              name=\"broad_category\"\n              type=\"string\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={formState.has_person}\n                  onChange={handleFormChange}\n                  name=\"has_person\"\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Person\"\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Add\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n      <Card className={props.classes.card}>\n        <CardContent>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            className={props.classes.root}\n          >\n            Add a Narrow Category\n          </Typography>\n          <form\n            className={props.classes.root}\n            onSubmit={(e: React.SyntheticEvent) =>\n              handleFormSubmit(e, \"narrow_category\")\n            }\n          >\n            <FormControl className={props.classes.formControl}>\n              <InputLabel htmlFor=\"broad_category\">Broad Category</InputLabel>\n              <Select\n                onChange={handleFormChange}\n                name=\"broad_category_id\"\n                labelId=\"broad_category_id\"\n                label=\"Broad Category\"\n              >\n                {props.categories.broad_categories.map((i) => (\n                  <MenuItem value={i.id}>{i.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              onChange={handleFormChange}\n              value={formState.narrow_category}\n              label=\"Narrow Category\"\n              name=\"narrow_category\"\n              type=\"string\"\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Add\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </DialogContent>\n  );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport ReportTable from \"../components/ReportTable\";\nimport AddExpensesForm from \"../components/AddExpensesForm\";\nimport AddIncomeForm from \"../components/AddIncomeForm\";\nimport API from \"../utils/API\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n} from \"@material-ui/core/styles\";\nimport { useAuth } from \"../Context/Auth\";\nimport type {\n  TableDataEntry,\n  DataListStateType,\n  AllDataListsType,\n  FormStateType,\n  InputName,\n  ChartJSDataType,\n  WallChartDataType,\n} from \"../interfaces/Interfaces\";\nimport { Dialog, Box } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  saveCategories,\n  loadCategories,\n  saveWallChartData,\n  loadWallChartData,\n  checkDatabase,\n} from \"../utils/db\";\nimport AppBar from \"../components/AppBar\";\n\nimport PivotTable from \"../components/PivotTable\";\nimport Form from \"../components/Form\";\nimport WallChart from \"../components/WallChart\";\nimport Edit from \"../components/Edit\";\nimport { useStateContext } from \"../Context/State\";\n\nfunction Home() {\n  const theme = useTheme();\n\n  const { Auth, setAuth } = useAuth();\n  const { setAlertState, setLoading } = useStateContext();\n\n  // Form control state\n  const [formState, setFormState] = useState<FormStateType>({\n    form: \"expenses\",\n    year: new Date(Date.now()).getUTCFullYear(),\n    month: new Date(Date.now()).getUTCMonth() + 1,\n  });\n\n  const [incomeTableState, setIncomeTableState] = useState<{\n    schema: { fields: [] };\n    data: TableDataEntry[];\n  }>({\n    schema: { fields: [] },\n    data: [\n      {\n        amount: \"\",\n        date: \"\",\n        source: \"\",\n        person: \"\",\n        id: NaN,\n        person_id: NaN,\n      },\n    ],\n  });\n\n  const [expensesTableState, setExpensesTableState] = useState<{\n    schema: { fields: [] };\n    data: TableDataEntry[];\n  }>({\n    schema: { fields: [] },\n    data: [\n      {\n        amount: \"\",\n        date: \"\",\n        source: \"\",\n        vendor: \"\",\n        broad_category: \"\",\n        narrow_category: \"\",\n        person: \"\",\n        notes: \"\",\n        id: NaN,\n      },\n    ],\n  });\n\n  // State for datalists\n  const [categoriesState, setCategoriesState] = useState<AllDataListsType>({\n    persons: [],\n    narrow_categories: [],\n    broad_categories: [],\n  });\n\n  // State For WallChart\n  function reducer(\n    state: ChartJSDataType,\n    action: WallChartDataType\n  ): ChartJSDataType {\n    if (action.labels.length > 0) {\n      state = {\n        labels: action.labels,\n        datasets: [\n          {\n            label: \"Income\",\n            data: action.income,\n            fill: false,\n            borderColor: theme.palette.primary.main,\n          },\n          {\n            label: \"Expenses\",\n            data: action.expenses,\n            fill: false,\n            borderColor: theme.palette.secondary.main,\n          },\n        ],\n      };\n    }\n    return state;\n  }\n\n  const [wallChartData, setWallChartData] = useReducer(reducer, {\n    labels: [],\n    datasets: [\n      {\n        label: \"Income\",\n        data: [],\n        fill: false,\n        borderColor: theme.palette.primary.main,\n      },\n      {\n        label: \"Expenses\",\n        data: [],\n        fill: false,\n        borderColor: theme.palette.secondary.main,\n      },\n    ],\n  });\n\n  // Converts dates to human-readable format\n  function formatDates(entry: TableDataEntry): TableDataEntry {\n    if (!entry.date) {\n      return entry;\n    } else {\n      let date = new Date(entry.date);\n      let year = date.getUTCFullYear();\n      let month = (1 + date.getUTCMonth()).toString();\n      month = month.length > 1 ? month : \"0\" + month;\n      let day = date.getUTCDate().toString();\n      day = day.length > 1 ? day : \"0\" + day;\n      let dateString = month + \"/\" + day + \"/\" + year;\n      entry.date = dateString;\n      return entry;\n    }\n  }\n\n  // Form control\n  function handleFormChange(\n    event:\n      | React.ChangeEvent<\n          | HTMLInputElement\n          | HTMLTextAreaElement\n          | { name?: string; value: unknown }\n        >\n      | React.ChangeEvent<HTMLSelectElement>\n  ): void {\n    let name = event.target.name as keyof typeof formState;\n    setFormState({ ...formState, [name]: event.target.value });\n  }\n\n  async function handleFormSubmit(event: React.SyntheticEvent): Promise<any> {\n    try {\n      event.preventDefault();\n      let route = formState.form;\n      setLoading(true);\n      let response = await API[route](Auth.token, formState);\n      setLoading(false);\n      // Formatting the dates the hard way because javascript doesn't support strftime...\n      if (route !== \"pivot\") {\n        response.data = response.data.map(formatDates);\n      }\n      switch (route) {\n        case \"expenses\":\n          setExpensesTableState(response);\n          break;\n        case \"income\":\n          setIncomeTableState(response);\n          break;\n        case \"pivot\":\n          setExpensesTableState(response);\n          break;\n      }\n    } catch (err) {\n      if (err.message === \"Unauthorized\") {\n        setAuth({ type: \"LOGOUT\" });\n      }\n      setLoading(false);\n      setAlertState({\n        severity: \"error\",\n        message: \"Error Fetching Data\",\n        open: true,\n      });\n    }\n  }\n\n  // Helper function for assigning an id to a TableDataEntry if user input matches an existing record\n  function assignId(name: InputName, value: string) {\n    let state;\n    let id;\n\n    switch (name) {\n      case \"person\":\n        state = categoriesState.persons;\n        id = \"person_id\";\n        break;\n      case \"broad_category\":\n        state = categoriesState.broad_categories;\n        id = \"broad_category_id\";\n        break;\n      case \"narrow_category\":\n        state = categoriesState.narrow_categories;\n        id = \"narrow_category_id\";\n        break;\n    }\n    let dataListItem = state.filter(\n      (i: DataListStateType) => i.name === value\n    )[0];\n    if (dataListItem) {\n      return { id: id, dataListItem: dataListItem };\n    } else {\n      return { id: null, dataListItem: null };\n    }\n  }\n\n  // Keep global state synced with InputRow state\n  async function handleExpensesChange(\n    event: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ): Promise<void> {\n    try {\n      let { name, value } = event.target;\n      let newExpensesTableStateData: TableDataEntry[] = [\n        ...expensesTableState.data,\n      ];\n      let updatedRow: TableDataEntry = {\n        ...newExpensesTableStateData[index],\n        [name]: value,\n      };\n      if (\n        name === \"person\" ||\n        name === \"broad_category\" ||\n        name === \"narrow_category\"\n      ) {\n        let { id, dataListItem } = assignId(name as InputName, value);\n        if (id && dataListItem) {\n          updatedRow = { ...updatedRow, [id]: dataListItem.id };\n        }\n      }\n      newExpensesTableStateData[index] = updatedRow;\n      setExpensesTableState({\n        ...expensesTableState,\n        data: newExpensesTableStateData,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // Keep global state synced with InputRow state\n  async function handleIncomeChange(\n    event: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ): Promise<void> {\n    try {\n      let { name, value } = event.target;\n      let newIncomeTableStateData: TableDataEntry[] = [\n        ...incomeTableState.data,\n      ];\n      let updatedRow: TableDataEntry = {\n        ...newIncomeTableStateData[index],\n        [name]: value,\n      };\n      if (name === \"person\") {\n        let { id, dataListItem } = assignId(name as InputName, value);\n        if (id && dataListItem) {\n          updatedRow = { ...updatedRow, [id]: dataListItem.id };\n        }\n      }\n      newIncomeTableStateData[index] = updatedRow;\n      setIncomeTableState({\n        ...incomeTableState,\n        data: newIncomeTableStateData,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // Reload data for Wallchart\n  async function reloadWallChartData(): Promise<void> {\n    let data = await loadWallChartData();\n    if (data) setWallChartData(data);\n    try {\n      data = await API.wallchart(Auth.token);\n      setWallChartData(data);\n      saveWallChartData(data);\n    } catch (err) {\n      if (err.message === \"No Data\") {\n        console.log(\"No Data!\");\n      }\n    }\n  }\n\n  // Update an expense row altered by the user\n  async function updateExpensesRow(index: number): Promise<void> {\n    try {\n      await API.updateExpenses(Auth.token, expensesTableState.data[index]);\n      setAlertState({\n        severity: \"success\",\n        message: \"Record updated!\",\n        open: true,\n      });\n      reloadWallChartData();\n    } catch (err) {\n      console.log(err);\n      setAlertState({\n        severity: \"error\",\n        message: \"Error: Failed to save!\",\n        open: true,\n      });\n    }\n  }\n\n  // Update an income row altered by the user\n  async function updateIncomeRow(index: number): Promise<void> {\n    try {\n      await API.updateIncome(Auth.token, incomeTableState.data[index]);\n      setAlertState({\n        severity: \"success\",\n        message: \"Record updated!\",\n        open: true,\n      });\n      reloadWallChartData();\n    } catch (err) {\n      setAlertState({\n        severity: \"error\",\n        message: \"Error: Failed to save!\",\n        open: true,\n      });\n    }\n  }\n\n  // Delete a row from the database\n  async function deleteEntry(id: number | undefined) {\n    try {\n      if (formState.form === \"expenses\") {\n        await API.deleteExpenses(Auth.token, id);\n        let newExpensesTableStateData = expensesTableState.data.filter(\n          (entry) => entry.id !== id\n        );\n        setExpensesTableState({\n          ...expensesTableState,\n          data: newExpensesTableStateData,\n        });\n      } else if (formState.form === \"income\") {\n        await API.deleteIncome(Auth.token, id);\n        let newIncomeTableStateData = incomeTableState.data.filter(\n          (entry) => entry.id !== id\n        );\n        setIncomeTableState({\n          ...incomeTableState,\n          data: newIncomeTableStateData,\n        });\n      }\n      reloadWallChartData();\n    } catch (err) {\n      console.error(err);\n      if (err === \"Unauthorized\") {\n        setAuth({ type: \"LOGOUT\" });\n      }\n    }\n  }\n\n  // Create classes to use for styling\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      home: {\n        padding: \"0 0 6em 0\",\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: \"10em\",\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n      root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        [theme.breakpoints.up(\"md\")]: {\n          flexWrap: \"noWrap\",\n        },\n        \"& > *\": {\n          margin: theme.spacing(1),\n          [theme.breakpoints.down(\"xs\")]: {\n            width: \"100%\",\n          },\n        },\n      },\n      wallchart: {\n        width: \"100%\",\n      },\n      logoutBtn: {\n        position: \"fixed\",\n        top: \"0px\",\n        right: \"0px\",\n        margin: \"1em\",\n      },\n      downloadBtn: {\n        position: \"fixed\",\n        top: \"0px\",\n        right: \"100px\",\n        margin: \"1em\",\n      },\n      editBtn: {\n        position: \"fixed\",\n        top: \"0px\",\n        left: \"0px\",\n        margin: \"1em\",\n      },\n      offline: {\n        backgroundColor: theme.palette.secondary.main,\n        color: \"white\",\n        textAlign: \"center\",\n        position: \"sticky\",\n      },\n      speedDial: {\n        position: \"fixed\",\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n      },\n      dialog: {\n        width: \"100%\",\n      },\n      datePicker: {\n        [theme.breakpoints.down(\"sm\")]: {\n          marginLeft: \"-10px\",\n        },\n      },\n      card: {\n        margin: \"1em 0\",\n      },\n      close: {\n        position: \"absolute\",\n        right: \"0\",\n        top: \"0\",\n      },\n    })\n  );\n  const classes = useStyles();\n\n  // SpeedDial controls\n  const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\n\n  const actions = [\n    {\n      icon: <AddIcon />,\n      name: \"Expenses\",\n      action: handleExpensesOpen,\n      operation: \"expenses\",\n    },\n    {\n      icon: <AddIcon />,\n      name: \"Income\",\n      action: handleIncomeOpen,\n      operation: \"income\",\n    },\n  ];\n\n  const handleSpeedDialClose = () => {\n    setSpeedDialOpen(false);\n  };\n\n  const handleOpen = () => {\n    setSpeedDialOpen(true);\n  };\n\n  function handleExpensesOpen(): void {\n    setAddExpensesOpen(true);\n    setSpeedDialOpen(false);\n  }\n\n  function handleIncomeOpen(): void {\n    setAddIncomeOpen(true);\n    setSpeedDialOpen(false);\n  }\n\n  // Controls for Dialogs\n  const [addExpensesOpen, setAddExpensesOpen] = useState(false);\n  const [addIncomeOpen, setAddIncomeOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  function handleClose() {\n    setAddExpensesOpen(false);\n    setAddIncomeOpen(false);\n    setEditOpen(false);\n  }\n\n  useEffect(() => {\n    async function getCategories(): Promise<void> {\n      try {\n        let categories = await API.getCategories(Auth.token);\n        setCategoriesState(categories);\n        saveCategories(categories);\n      } catch (err) {\n        let categories = await loadCategories();\n        setCategoriesState(categories);\n      }\n    }\n    getCategories();\n    reloadWallChartData();\n  }, [Auth.token]);\n\n  useEffect(() => {\n    async function checkAndDisplaySuccess() {\n      let result = await checkDatabase();\n      setAlertState(result);\n    }\n    // listen for app coming back online\n    window.addEventListener(\"online\", checkAndDisplaySuccess);\n    return () => window.removeEventListener(\"online\", checkAndDisplaySuccess);\n  }, []);\n\n  return (\n    <Box component=\"div\" className={classes.home}>\n      <AppBar setEditOpen={setEditOpen} />\n      <Box component=\"header\" className=\"header\">\n        <h1 style={{ textAlign: \"center\" }}>Wall Chart</h1>\n\n        <WallChart data={wallChartData} />\n        <Form\n          classes={classes}\n          handleFormSubmit={handleFormSubmit}\n          handleFormChange={handleFormChange}\n          formState={formState}\n        />\n      </Box>\n      <div className=\"body\">\n        {formState.form === \"income\" && incomeTableState.data[0]?.id ? (\n          <ReportTable\n            state={incomeTableState}\n            dataLists={categoriesState}\n            handleChange={handleIncomeChange}\n            handleUpdate={updateIncomeRow}\n            deleteEntry={deleteEntry}\n            form={formState.form}\n          />\n        ) : null}\n        {formState.form === \"expenses\" && expensesTableState.data[0]?.id ? (\n          <ReportTable\n            state={expensesTableState}\n            dataLists={categoriesState}\n            handleChange={handleExpensesChange}\n            handleUpdate={updateExpensesRow}\n            deleteEntry={deleteEntry}\n            form={formState.form}\n          />\n        ) : null}\n        {formState.form === \"pivot\" && expensesTableState.data[0]?.id ? (\n          <PivotTable state={expensesTableState} />\n        ) : null}\n      </div>\n      <Dialog onClose={handleClose} open={editOpen} maxWidth=\"xl\">\n        <Edit\n          classes={classes}\n          handleClose={handleClose}\n          categories={categoriesState}\n          setCategories={setCategoriesState}\n          setLoading={setLoading}\n        />\n      </Dialog>\n      <Dialog onClose={handleClose} open={addExpensesOpen} maxWidth=\"xl\">\n        <AddExpensesForm\n          classes={classes}\n          handleClose={handleClose}\n          categories={categoriesState}\n          setLoading={setLoading}\n          reloadWallChart={reloadWallChartData}\n        />\n      </Dialog>\n      <Dialog onClose={handleClose} open={addIncomeOpen} maxWidth=\"xl\">\n        <AddIncomeForm\n          classes={classes}\n          handleClose={handleClose}\n          categories={categoriesState}\n          setLoading={setLoading}\n          reloadWallChart={reloadWallChartData}\n        />\n      </Dialog>\n      <SpeedDial\n        ariaLabel=\"SpeedDial\"\n        className={classes.speedDial}\n        icon={<SpeedDialIcon />}\n        onClose={handleSpeedDialClose}\n        onOpen={handleOpen}\n        open={speedDialOpen}\n        onMouseLeave={() => {}}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            tooltipOpen\n            onClick={action.action}\n          />\n        ))}\n      </SpeedDial>\n    </Box>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport {\n  Button,\n  DialogContent,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useStateContext } from \"../Context/State\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n        [theme.breakpoints.down(\"xs\")]: {\n          width: \"100%\",\n        },\n      },\n    },\n    heading: {\n      textAlign: \"center\",\n      fontFamily: \"Times New Roman, serif\",\n    },\n  })\n);\n\nexport default function Signup({ handleClose }: { handleClose: Function }) {\n  const { setAlertState, setLoading } = useStateContext();\n\n  const [signupFormState, setSignupFormState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setSignupFormState({\n      ...signupFormState,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await API.signup(signupFormState);\n      setAlertState({\n        severity: \"success\",\n        message: \"You're signed up! Please log in\",\n        open: true,\n      });\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setAlertState({\n        severity: \"error\",\n        message: \"Error Signing Up!\",\n        open: true,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <DialogContent>\n      <div style={{ textAlign: \"center\" }}>\n        <Typography variant=\"h2\" component=\"h4\" className={classes.heading}>\n          Sign Up\n        </Typography>\n        <form className={classes.root} onSubmit={formSubmit}>\n          <TextField\n            onChange={handleChange}\n            value={signupFormState.username}\n            type=\"text\"\n            name=\"username\"\n            label=\"username\"\n            variant=\"outlined\"\n          />\n          <TextField\n            onChange={handleChange}\n            value={signupFormState.password}\n            type=\"password\"\n            name=\"password\"\n            label=\"password\"\n            variant=\"outlined\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            name=\"signup\"\n            type=\"submit\"\n          >\n            Sign Up\n          </Button>\n        </form>\n      </div>\n    </DialogContent>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport { useAuth } from \"../Context/Auth\";\nimport { Button, TextField, Dialog, Typography } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Signup from \"../components/Signup\";\nimport { useStateContext } from \"../Context/State\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    heading: {\n      textAlign: \"center\",\n      fontFamily: \"Times New Roman, serif\",\n    },\n    signupBtn: {\n      float: \"right\",\n      margin: \"1em\",\n    },\n    sidebar: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n      flexWrap: \"wrap\",\n    },\n    form: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        flexWrap: \"wrap\",\n        [theme.breakpoints.down(\"xs\")]: {\n          width: \"100%\",\n        },\n      },\n    },\n    link: {\n      color: theme.palette.primary.main,\n      \"&:hover\": theme.palette.secondary.main,\n    },\n  })\n);\n\nexport default function Login() {\n  const { Auth, setAuth } = useAuth();\n  const { setAlertState, setLoading } = useStateContext();\n  const [loginFormState, setLoginFormState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [signupOpen, setSignupOpen] = useState<boolean>(false);\n\n  const inputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setLoginFormState({\n      ...loginFormState,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      let newToken = await API.login(loginFormState);\n      setAuth({\n        type: \"LOGIN\",\n        payload: { user: loginFormState.username, token: newToken.token },\n      });\n    } catch (err) {\n      console.error(err);\n      setAlertState({\n        severity: \"error\",\n        message: \"Incorrect username or password\",\n        open: true,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const classes = useStyles();\n\n  function handleClose() {\n    setSignupOpen(false);\n  }\n\n  if (Auth.loggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      <Grid container className={classes.root}>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h1\"\n            component=\"h2\"\n            gutterBottom\n            className={classes.heading}\n          >\n            Flask of Finances\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.sidebar}>\n          <form className={classes.form} onSubmit={formSubmit}>\n            <TextField\n              onChange={inputChange}\n              value={loginFormState.username}\n              type=\"text\"\n              name=\"username\"\n              label=\"username\"\n              variant=\"outlined\"\n            />\n            <TextField\n              onChange={inputChange}\n              value={loginFormState.password}\n              type=\"password\"\n              name=\"password\"\n              label=\"password\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              name=\"login\"\n              type=\"submit\"\n            >\n              Login\n            </Button>\n          </form>\n        </Grid>\n        <Grid item xs={12} className={classes.sidebar}>\n          <Button className={classes.link} onClick={() => setSignupOpen(true)}>\n            Sign Up\n          </Button>\n        </Grid>\n      </Grid>\n      <Dialog onClose={handleClose} open={signupOpen} maxWidth=\"xl\">\n        <Signup handleClose={handleClose} />\n      </Dialog>\n    </>\n  );\n}\n","import React from \"react\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\n\nexport default function Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"./Alert\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AlertStateType } from \"../interfaces/Interfaces\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  snackbar: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbar({\n  state,\n  setState,\n}: {\n  state: AlertStateType;\n  setState: React.Dispatch<React.SetStateAction<AlertStateType>>;\n}) {\n  const classes = useStyles();\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div className={classes.snackbar}>\n      <Snackbar open={state.open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={state.severity}>\n          {state.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport API from \"./utils/API\";\nimport { testDatabase } from \"./utils/db\";\nimport \"./App.css\";\nimport CustomizedSnackbar from \"./components/SnackBar\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  Theme,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport { green, blueGrey, deepPurple } from \"@material-ui/core/colors\";\nimport { MuiPickersOverrides } from \"@material-ui/pickers/typings/overrides\";\nimport {\n  CssBaseline,\n  ThemeOptions,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { useAuth } from \"./Context/Auth\";\nimport { useStateContext } from \"./Context/State\";\n\n// Types to allow for theme customization\ntype overridesNameToClassKey = {\n  [P in keyof MuiPickersOverrides]: keyof MuiPickersOverrides[P];\n};\ntype CustomType = {\n  MuiPickersBasePicker: {\n    pickerView: {\n      maxWidth?: string;\n    };\n  };\n};\ndeclare module \"@material-ui/core/styles/overrides\" {\n  interface ComponentNameToClassKey extends overridesNameToClassKey {}\n  export interface ComponentNameToClassKey extends CustomType {}\n}\n\n// Instantiating default theme to use breakpoints\nconst defaultTheme = createMuiTheme();\n\n// Theme factory\nfunction createMyTheme(options: ThemeOptions) {\n  return createMuiTheme({\n    overrides: {\n      MuiPickersBasePicker: {\n        container: {\n          backgroundColor: blueGrey[900],\n          [defaultTheme.breakpoints.down(\"xs\")]: {\n            marginLeft: \"-10px\",\n          },\n        },\n      },\n      MuiCard: {\n        root: {\n          backgroundColor: blueGrey[900],\n        },\n      },\n      MuiDialogContent: {\n        root: {\n          backgroundColor: blueGrey[900],\n        },\n      },\n      MuiPickersCalendarHeader: {\n        iconButton: {\n          backgroundColor: blueGrey[900],\n        },\n      },\n    },\n    ...options,\n  });\n}\n\n// Adding global palette colors\nconst theme = createMyTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: blueGrey[900],\n    },\n    primary: {\n      main: green[900],\n    },\n    secondary: {\n      main: deepPurple[800],\n    },\n  },\n});\n\n// Check if user is logged in before returning protected component/page\nconst ProtectedRoute = ({\n  component: Component,\n  loggedIn,\n  ...rest\n}: {\n  path: string;\n  loggedIn: boolean;\n  setLoggedIn: Function;\n  component: React.FunctionComponent<RouteComponentProps>;\n}): JSX.Element => (\n  <Route\n    {...rest}\n    render={(props) =>\n      loggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nexport default function App() {\n  const { Auth, setAuth } = useAuth();\n  const { alertState, setAlertState, loading } = useStateContext();\n\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      backdrop: {\n        zIndex: 1301, // To be in front of Dialog at 1300\n        color: \"#fff\",\n      },\n    })\n  );\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n    if (token) {\n      API.checkAuth(token)\n        .then((res) =>\n          setAuth({\n            type: \"LOGIN\",\n            payload: { user: res.username, token: token },\n          })\n        )\n        .catch((err) => {\n          if (err.message === \"Unauthorized\") {\n            setAuth({ type: \"LOGOUT\" });\n          } else {\n            setAuth({\n              type: \"LOGIN\",\n              payload: { user: user || \"\", token: token || \"\" },\n            });\n          }\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    testDatabase();\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <ProtectedRoute\n          path=\"/\"\n          loggedIn={Auth.loggedIn}\n          setLoggedIn={setAuth}\n          component={Home}\n        />\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n      </Router>\n      <CustomizedSnackbar state={alertState} setState={setAlertState} />\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress disableShrink color=\"inherit\" />\n      </Backdrop>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./Context/Auth\";\nimport { StateProvider } from \"./Context/State\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <StateProvider>\n        <App />\n      </StateProvider>\n    </AuthProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}